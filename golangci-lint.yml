# настройки запуска
run:
  # значение конкурентности устанавливаем по количеству CPU
  concurrency: 4

  # анализ не должен превышать
  timeout: 1m

  # выводить "exit-code" при наличии хотя бы одного сообщения
  issues-exit-code: 1

  # не включать анализ тестов
  tests: false

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work
  # on Windows.
  skip-dirs:
    - src/external_libs
    - autogenerated_by_my_lib

  # Пропускать папки вендора, сторонних зависимостей и т.д.
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

  # Пропускать файлы, заканчивающиеся на .bad.go
  skip-files:
    - ".*\\.my\\.go$"
    - lib/bad.go
    - ".*\\.bad\\.go$"

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  # default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""

  # sorts results by: filepath, line and column
  sort-results: false

# список линтеров
linters:
  disable-all: true
  enable:
    - goimports # обновление списка imports
    - gofmt # форматирование кода (пробелы, отступы, скобки) -s позволяет упрощать выражения
    - govet # общий анализ возможных багов
    - goconst # проверяет в коде нет повторяющихся строковых литералов, которые можно было бы вынести в константы
    - funlen # детектирование слишком крупных функций
    - bodyclose # проверка на незакрытые body после чтения тела ответа
    - errcheck # находит места где мы забыли проверку ошибок
    - deadcode # детектирование, если не используется тип или не используется функция
    - unparam # умеет сообщать когда аргументы функции не используются в самом теле функции
    - exportloopref # детектирование экспорта указателя на переменную внутри цикла
    - gocyclo # проверяет цикломатическую сложность кода и ругается когда сложность функции превысит какой-то порог. Порог настраивается
    # unindent не поддерживается golintci-lint умеет понижать уровень вложенности кода
    - nakedret # умеет говорить что вы используете return без значений и при этом вы его используете в слишком длинной функции
    - gosimple #
    - misspell # проверяет что в коде в комментариях нет опечаток
    - unconvert # проверяет что вы не делайте лишние конверсии
    - varcheck # проверяет неиспользуемые переменные
    - unused # умеет ругаться на неиспользуемые поля структур
    - ineffassign # репортит когда изменение переменой не используются дальше в коде
    - gocritic # умеет репортить нам о копировании тяжелых структур данных
    - prealloc # умеет находить нам места в коде, в которых мы можем заранее преаллоцировать slice
    - staticcheck # умеет находить тонны различных багов, это совершенно классная штука как и go vet

# настройки отдельных линтеров
linters-settings:
  goimports:
    # указываем префикс локальных импортов, они будут группироваться
    local-prefixes: path/to/module
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  golint:
    # minimal confidence for issues, default is 0.8
    min-confidence: 0.8
  govet:
    # проверка на использование переменных «в тени»
    check-shadowing: true
  goconst:
    # goconst находит строки не меньше 2 символов, которые встречаются хотя бы 2 раза
    min-len: 2
    min-occurrences: 2
  funlen:
    # функция помечается длинной если она больше 100 строк кода либо больше 50 операций
    lines: 100
    statements: 50
  gocyclo:
    min-complexity: 10